'''Adaption of binary search, checks within ranges instead of for a specific value

FUNCTION binary_search (list = type(list), lower_bound, upper_bound):

    if length of list equivalent to 0
        return False
    else:
        midpoint <-- length of list // 2

        if list[midpoint] > lower_bound and list[midpoint] < upper_bound
            return True
        else if list[midpoint] > lower_bound
            return FUNCTION binary_search (list[start to (midpoint-1], lower_bound, upper_bound)
        else:
            return FUNCTION binary_search (list[from (midpoint+ 1) to end of list, lower_bound, upper_bound)

    return Found

big 0 notation = 0(log(n))


'''
def binary_Search (list, lower_bound, upper_bound):


    if len(list) == 0:
        return False

    else:

        midpoint = len(list)//2
        if list[midpoint] > lower_bound and list[midpoint] < upper_bound:

            return True

        elif list[midpoint] > lower_bound:
            return binary_Search(list[:midpoint],lower_bound, upper_bound)

        else:
            return binary_Search(list[midpoint + 1:],lower_bound, upper_bound)




list = [2.5,3.5,5.5,7.5,11.5,13.5,17.5]
print (binary_Search(list, -2,3))
print (binary_Search(list, 14,16) )
