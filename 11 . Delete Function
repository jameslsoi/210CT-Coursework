class Node (object):

    def __init__(self, value):
        self.value = value
        self.next = None
        self.prev = None

class List (object):
    def __init__(self):
        self.head = None
        self.tail = None


    def insert(self, n ,x):
        if n!= None:   # if n is not None
            x.next = n.next
            n.next = x
            x.prev = n

        if self.head == None:           # if parent == none
            self.head = self.tail = x   #then parent = child =
            x.prev =x.next = None

        elif self.tail == n:
            self.tail = x

    def delete (self, n):
        if n.prev != 0:
            n.prev.next = n.next
        else:
            l.head != 0
        if n.next !=0:
            n.next.prev = n.prev
        else:
            l.tail = n.prev

    
    def display(self):
        values = []
        n = self.head
        while n!= None:
            values.append(str(n.value))
            n = n.next
        print ("List: ",",".join(values))

if __name__ == '__main__':
    l = List()
    l.insert(None, Node(4))
    l.insert(l.head, Node(6))
    l.insert(l.head, Node(8))
    l.insert(l.tail, Node(10))
    l.insert(l.tail, Node (12))
    l.insert(l.tail, Node (14))
    l.delete(l.head, Node(8))
    l.display()
