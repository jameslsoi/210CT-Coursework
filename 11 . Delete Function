class Node (object):

    def __init__(self, value, n =None, p =None):
        self.value = value
        self.next_node = n
        self.prev_node = p


    def get_next(self):
        return self.next_node

    def set_next(self, n):
        self.next_node = n

    def get_prev (self):
        return self.prev_node

    def set_prev (self, p):
        self.prev_node = p


    def get_value (self):
        return self.value

    def set_value(self):
        self.value = value

class linked_list(object):

    def __init__(self, r= None):
        self.root = r

    def insert(self, value):
        new_node = Node( value, self.root)
        if self.root:
            self.root.set_prev(new_node)
        self.root = new_node

    def remove (self, value):
        current_node = self.root

        while current_node:
            if current_node.get_value() == value:
                next = current_node.get_next()
                prev = current_node.get_prev()

                if next:
                    next.set_prev(prev)

                if prev:
                    prev.set_next(next)

                else:
                    self.root = current_node
                return current_node
            else:
                current_node = current_node.get_next()

    def display(self):
        lists = []
        y = self.root
        while y != None:
            lists.append(str(y.value))
            y = y.get_next()

        print ("List: ",",".join(lists))

if __name__ == '__main__':


    myList = linked_list()
    myList.insert(2)
    myList.insert(3)
    myList.insert(1)
    myList.insert(7)

    myList.display()
    myList.remove(3)
    myList.display()



